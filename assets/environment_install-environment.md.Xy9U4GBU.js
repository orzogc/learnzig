import{_ as s,c as i,o as a,V as t}from"./chunks/framework.xodzkkLE.js";const F=JSON.parse('{"title":"环境安装","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"environment/install-environment.md","filePath":"environment/install-environment.md","lastUpdated":1706437377000}'),e={name:"environment/install-environment.md"},n=t(`<h1 id="环境安装" tabindex="-1">环境安装 <a class="header-anchor" href="#环境安装" aria-label="Permalink to &quot;环境安装&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">🅿️ 提示</p><p>当前 Zig 还没有发布 1.0 版本，发布周期与 LLVM 的新版本关联，其发布周期约为 6 个月。 因此，Zig 的发布往往要间隔很久，以目前的开发速度，稳定版最终会变得过时（即便此时还没有新的稳定版），所以官方鼓励用户使用 <code>nightly</code> 版本。</p></div><h2 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h2><details class="details custom-block"><summary>windows 输出中文乱码问题</summary><p>如果你是中文简体用户，那么建议将 windows 的编码修改为UTF-8编码，由于 zig 的源代码编码格式是 UTF-8，导致在windows下向控制台打印输出中文会发生乱码的现象。</p><p>修改方法为：</p><ol><li>打开 windows 设置中的 <strong>时间和语言</strong>，进入 <strong>语言和区域</strong>。</li><li>点击下方的管理语言设置，在新打开的窗口中点击 <strong>管理</strong>。</li><li>点击下方的 <strong>更改系统区域设置</strong>，勾选下方的 “使用 unicode UTF-8 提供全球语言支持”</li><li>重启计算机。</li></ol></details><h3 id="scoop" tabindex="-1">Scoop <a class="header-anchor" href="#scoop" aria-label="Permalink to &quot;Scoop&quot;">​</a></h3><p>推荐使用 <a href="https://scoop.sh/#/" target="_blank" rel="noreferrer">Scoop</a> 工具进行安装，Scoop 的 <strong>main</strong> 仓库和 <strong>version</strong> 仓库分别有着最新的 <code>release</code> 和 <code>nightly</code> 版本。</p><p>安装方式如下：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-3iQ43" id="tab-wdf1uCm" checked="checked"><label for="tab-wdf1uCm">Release</label><input type="radio" name="group-3iQ43" id="tab-2FP-Kde"><label for="tab-2FP-Kde">Nightly</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scoop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bucket</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scoop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main/zig</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scoop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bucket</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> versions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scoop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> versions/zig-dev</span></span></code></pre></div></div></div><div class="info custom-block"><p class="custom-block-title">🅿️ 提示</p><p>在使用 Scoop 时，推荐将 Zig 作为 global 安装，这样 Zig 会被自动添加进环境变量。</p></div><h3 id="其他的包管理器" tabindex="-1">其他的包管理器 <a class="header-anchor" href="#其他的包管理器" aria-label="Permalink to &quot;其他的包管理器&quot;">​</a></h3><p>也可以使用诸如 <a href="https://github.com/microsoft/winget-cli" target="_blank" rel="noreferrer">WinGet</a>，<a href="https://chocolatey.org/" target="_blank" rel="noreferrer">Chocolatey</a></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-yGa6k" id="tab-YOvSVUW" checked="checked"><label for="tab-YOvSVUW">WinGet</label><input type="radio" name="group-yGa6k" id="tab-yLRPnCK"><label for="tab-yLRPnCK">Chocolatey</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">winget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zig.zig</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">choco</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zig</span></span></code></pre></div></div></div><h3 id="手动安装" tabindex="-1">手动安装 <a class="header-anchor" href="#手动安装" aria-label="Permalink to &quot;手动安装&quot;">​</a></h3><p>通过官方的<a href="https://ziglang.org/zh/download/" target="_blank" rel="noreferrer">发布页面</a>下载对应的 Zig 版本，普通用户选择 <code>zig-windows-x86_64</code> 即可。</p><p>执行以下命令：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-2fhHO" id="tab-cVu9GXd" checked="checked"><label for="tab-cVu9GXd">System</label><input type="radio" name="group-2fhHO" id="tab-5gVboGM"><label for="tab-5gVboGM">User</label></div><div class="blocks"><div class="language-powershell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]::SetEnvironmentVariable(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &quot;Path&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]::GetEnvironmentVariable(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Path&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Machine&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;;C:\\your-path\\zig-windows-x86_64-your-version&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &quot;Machine&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]::SetEnvironmentVariable(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &quot;Path&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]::GetEnvironmentVariable(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Path&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;User&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;;C:\\your-path\\zig-windows-x86_64-your-version&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &quot;User&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></div></div><div class="info custom-block"><p class="custom-block-title">🅿️ 提示</p><p>以上的 <strong><em>System</em></strong> 对应的系统全局的环境变量， <strong><em>User</em></strong> 对应的是用户的环境变量。如果是个人电脑，使用任意一个没有区别。</p><p>首先确保你的路径是正确的，其次你可能注意到路径前面还有一个 <code>;</code> ，此处并不是拼写错误！</p></div><h2 id="mac" tabindex="-1">Mac <a class="header-anchor" href="#mac" aria-label="Permalink to &quot;Mac&quot;">​</a></h2><p>Mac安装 zig 就很方便，但是如果要使用 <code>nightly</code> ，还是需要自行下载并添加环境变量</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-DEDtt" id="tab-vhH7Vq2" checked="checked"><label for="tab-vhH7Vq2">Homebrew</label><input type="radio" name="group-DEDtt" id="tab-DBnCyG4"><label for="tab-DBnCyG4">MacPorts</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zig</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zig</span></span></code></pre></div></div></div><h2 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h2><p>Linux安装的话， 由于发行版的不同，安装的方式五花八门，先列出通过包管理器安装 Zig 的方法，再说明如何手动安装 Zig 并设置环境变量。</p><h3 id="包管理器安装" tabindex="-1">包管理器安装 <a class="header-anchor" href="#包管理器安装" aria-label="Permalink to &quot;包管理器安装&quot;">​</a></h3><p>以下列出了支持通过包管理器安装 Zig 的发行版和对应命令：</p><table><thead><tr><th>发行版</th><th style="text-align:center;">命令</th><th style="text-align:right;">备注</th></tr></thead><tbody><tr><td>Arch Linux</td><td style="text-align:center;">pacman -S zig</td><td style="text-align:right;">AUR: <a href="https://aur.archlinux.org/packages/zig-dev-bin" target="_blank" rel="noreferrer"><code>zig-dev-bin</code></a></td></tr><tr><td>Fedora</td><td style="text-align:center;">dnf install zig</td><td style="text-align:right;"></td></tr><tr><td>Fedora Silverblue</td><td style="text-align:center;">rpm-ostree install zig</td><td style="text-align:right;"></td></tr><tr><td>Gentoo</td><td style="text-align:center;">emerge -av dev-lang/zig</td><td style="text-align:right;"></td></tr><tr><td>NixOS</td><td style="text-align:center;">nix-env -i zig</td><td style="text-align:right;"></td></tr><tr><td>Ubuntu (snap)</td><td style="text-align:center;">snap install zig --classic --beta</td><td style="text-align:right;"></td></tr><tr><td>Void Linux</td><td style="text-align:center;">xbps-install -Su zig</td><td style="text-align:right;"></td></tr></tbody></table><h3 id="手动安装-1" tabindex="-1">手动安装 <a class="header-anchor" href="#手动安装-1" aria-label="Permalink to &quot;手动安装&quot;">​</a></h3><p>通过官方的<a href="https://ziglang.org/zh/download/" target="_blank" rel="noreferrer">发布页面</a>下载对应的 Zig 版本，之后将包含 Zig 二进制的目录加入到 PATH 环境变量即可。</p><h2 id="多版本管理" tabindex="-1">多版本管理 <a class="header-anchor" href="#多版本管理" aria-label="Permalink to &quot;多版本管理&quot;">​</a></h2><p>由于 Zig 还在快速开发迭代中，因此在使用社区已有类库时，有可能出现新版本 Zig 无法编译的情况，这时候一方面可以跟踪上游进展，看看是否有解决方案；另一个就是使用固定的版本来编译这个项目，显然这种方式更靠谱一些。</p><p>目前为止，Zig 的版本管理工具主要有如下几个：</p><ul><li><a href="https://github.com/marler8997/zigup" target="_blank" rel="noreferrer">marler8997/zigup</a>: Download and manage zig compilers</li><li><a href="https://github.com/tristanisham/zvm" target="_blank" rel="noreferrer">tristanisham/zvm</a>: Lets you easily install/upgrade between different versions of Zig</li><li><a href="https://github.com/hendriknielaender/zvm" target="_blank" rel="noreferrer">hendriknielaender/zvm</a>: Fast and</li></ul><p>读者可根据自身需求选择，这里介绍一个通用的版本管理工具：<a href="https://asdf-vm.com/" target="_blank" rel="noreferrer">asdf</a>。</p><ol><li>参考 <a href="https://asdf-vm.com/guide/getting-started.html" target="_blank" rel="noreferrer">Getting Started</a> 下载 asdf，一般而言，常见的系统管理器，如 brew、apt 均可直接安装</li><li>安装 asdf <a href="https://github.com/asdf-community/asdf-zig" target="_blank" rel="noreferrer">Zig 插件</a></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin-add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zig</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/asdf-community/asdf-zig.git</span></span></code></pre></div><ol start="3"><li>之后就可以用 asdf 管理 Zig 版本。这里列举一些 asdf 常用命令：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 列举所有可安装的版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list-all</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zig</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装指定版本的 Zig</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">versio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 卸载指定版本的 Zig</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">versio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置全局默认版本，会写到 $HOME/.tool-versions 文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">versio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置当前目录使用的版本，会写到 $(pwd)/.tool-versions 文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">versio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div>`,36),l=[n];function h(p,r,d,o,k,g){return a(),i("div",null,l)}const y=s(e,[["render",h]]);export{F as __pageData,y as default};
